/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int cameras=0;
    public int minCameraCover(TreeNode root) {
        return dfs(root)==0?cameras+1:cameras;
    }
    private int dfs(TreeNode node){
        if(node==null)return 2;
        int left=dfs(node.left);
        int right=dfs(node.right);
        if(left==0||right==0){
            cameras++;
            return 1;
        }
        return left==1||right==1?2:0;
    }
}
